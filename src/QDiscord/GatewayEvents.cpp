#include "GatewayEvents.h"

#include <QtCore/QMap>
#include <QtCore/QString>

#define EVENT_DECL(X) { #X, EventId:: X }

QDISCORD_NAMESPACE_BEGIN

namespace Events
{
	using GatewayEventIds = QMap<QString, EventId>;

	static GatewayEventIds gateway_event_ids =
	{
		EVENT_DECL(HELLO),
		EVENT_DECL(READY),
		EVENT_DECL(RESUMED),
		EVENT_DECL(INVALID_SESSION),
		EVENT_DECL(CHANNEL_CREATE),
		EVENT_DECL(CHANNEL_UPDATE),
		EVENT_DECL(CHANNEL_DELETE),
		EVENT_DECL(CHANNEL_PINS_UPDATE),
		EVENT_DECL(GUILD_CREATE),
		EVENT_DECL(GUILD_UPDATE),
		EVENT_DECL(GUILD_DELETE),
		EVENT_DECL(GUILD_BAN_ADD),
		EVENT_DECL(GUILD_BAN_REMOVE),
		EVENT_DECL(GUILD_EMOJIS_UPDATE),
		EVENT_DECL(GUILD_INTEGRATIONS_UPDATE),
		EVENT_DECL(GUILD_MEMBER_ADD),
		EVENT_DECL(GUILD_MEMBER_REMOVE),
		EVENT_DECL(GUILD_MEMBER_UPDATE),
		EVENT_DECL(GUILD_MEMBERS_CHUNK),
		EVENT_DECL(GUILD_ROLE_CREATE),
		EVENT_DECL(GUILD_ROLE_UPDATE),
		EVENT_DECL(GUILD_ROLE_DELETE),
		EVENT_DECL(MESSAGE_CREATE),
		EVENT_DECL(MESSAGE_UPDATE),
		EVENT_DECL(MESSAGE_DELETE),
		EVENT_DECL(MESSAGE_DELETE_BULK),
		EVENT_DECL(MESSAGE_REACTION_ADD),
		EVENT_DECL(MESSAGE_REACTION_REMOVE),
		EVENT_DECL(MESSAGE_REACTION_REMOVE_ALL),
		EVENT_DECL(PRESENCE_UPDATE),
		EVENT_DECL(TYPING_START),
		EVENT_DECL(USER_UPDATE),
		EVENT_DECL(VOICE_STATE_UPDATE),
		EVENT_DECL(VOICE_SERVER_UPDATE),
		EVENT_DECL(WEBHOOKS_UPDATE),
	};

	EventId idFromName(const QString& name)
	{
		GatewayEventIds::const_iterator it = gateway_event_ids.find(name);
		if (it != gateway_event_ids.cend())
			return (*it);

		return EventId::UNKNOWN;
	}
}

QDISCORD_NAMESPACE_END